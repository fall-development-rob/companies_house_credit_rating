version: '3.8'
services:
  postgres:
    image: postgres:14
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  liquibase:
    build:
      context: .
      dockerfile: Dockerfile.liquibase
    container_name: liquibase_container
    environment:
      LIQUIBASE_URL: ${LIQUIBASE_URL}
      LIQUIBASE_USERNAME: ${LIQUIBASE_USERNAME}
      LIQUIBASE_PASSWORD: ${LIQUIBASE_PASSWORD}
      LIQUIBASE_CHANGELOG_FILE: ${LIQUIBASE_CHANGELOG_FILE}
    depends_on:
      postgres:
        condition: service_healthy
    command: update

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: creditchecker_app
    ports:
      - "8080:8080"
    volumes:
      - .:/app   # Mount the project directory into the container
      - maven_cache:/root/.m2  # Cache Maven dependencies
    working_dir: /app
    command: mvn spring-boot:run
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL}
      COMPANIES_HOUSE_API: ${COMPANIES_HOUSE_API}

volumes:
  postgres_data:
  maven_cache:
